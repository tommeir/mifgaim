<?php
// $Id: hidden_captcha.module,v 1.1.2.2 2010/10/10 20:00:29 alexiswilke Exp $

/**
 * Implementation of hook_init().
 */
function hidden_captcha_init() {
  $path = drupal_get_path('module', 'hidden_captcha');
  drupal_add_css($path . '/hidden_captcha.css');
}

/**
 * Implementation of hook_help().
 */
function hidden_captcha_help($path, $arg) {
  switch ($path) {
    case 'admin/user/captcha/hidden_captcha':
      return '<p>'. t('This CAPTCHA presents a text field that we expect no one to fill. The text field can be given any name and will be hidden from view using CSS.') .'</p>';
  }
}

/**
 * Implementation of hook_menu().
 */
function hidden_captcha_menu() {
  $items = array();
  $items['admin/user/captcha/hidden_captcha'] = array(
    'title' => 'Hidden CAPTCHA',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hidden_captcha_settings_form'),
    'access arguments' => array('administer CAPTCHA settings'),
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Function for the hidden captcha settings form.
 */
function hidden_captcha_settings_form() {
  $form = array();
  $form['hidden_captcha_label'] = array(
    '#type' => 'textfield',
    '#title' => t('Hidden text field title'),
    '#description' => t('Please, enter the label of the hidden text field. The title will be visible to people who do not have CSS and robots.'),
    '#default_value' => variable_get('hidden_captcha_label', 'Enter your dog\'s name'),
  );
  return system_settings_form($form);
}

/**
 * Implementation of hook_captcha().
 */
function hidden_captcha_captcha($op, $captcha_type = '') {
  switch ($op) {
    case 'list':
      return array('Hidden CAPTCHA');

    case 'generate':
      if ($captcha_type == 'Hidden CAPTCHA') {
        $captcha = array();
        $captcha['solution'] = '';
        $captcha['form']['captcha_response'] = array(
          '#type' => 'textfield',
          '#title' => variable_get('hidden_captcha_label', 'Enter your dog\'s name'),
          '#required' => FALSE,
        );
        return $captcha;
      }
      break;

  }
}

/**
 * Implementation of hook_theme().
 */
function hidden_captcha_theme() {
  return array(
    'captcha' => array(
      'arguments' => array('element' => NULL),
      'function' => 'theme_hidden_captcha_captcha',
    ),
  );
}

/**
 * Implementation of theme_hook().
 */
function theme_hidden_captcha_captcha($element) {
  $captcha = theme_captcha($element);
  if (strncmp($element["#captcha_type"], 'hidden_captcha/', 15) == 0) {
    $captcha = '<div class="hidden-captcha">' . $captcha . '</div>';
  }
  return $captcha;
}

// vim: ts=2 sw=2 et syntax=php
