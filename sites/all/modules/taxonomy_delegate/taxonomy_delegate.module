<?php
// $Id: taxonomy_delegate.module,v 1.1.4.12 2008/07/09 23:15:35 nancyw Exp $ 

/**
 * @file
 * Allows delegating taxonomy maintenance.
 */

/**
 * Implementation of hook_help().
 */
function taxonomy_delegate_help($path, $args = null) {
  switch ($path) {
    case 'admin/help#taxonomy_delegate':
      $output = '<p>'. t('The taxonomy_delegate module allows the administrator to delegate the maintenance of selected vocabularies without the need to grant "access taxonomy" permission. Delegation is done on the <a href="!link">Category Delegate</a> tab of the Categories administration page.', array('!link' => 'admin/content/taxonomy/delegate')) .'</p>';
      if (module_exists('forum')) {
        $output .= '<p>'. t('Note that forum containers and topics are a vocabulary, so you may delegate their maintenance to a specific role without giving full forums administration permission.') .'</p>';
      }
      break;
      
    case 'admin/content/taxonomy/delegate':
      $output = '<p>'. t('This is an overview of the current delegation of authority to administer categories. Setting of the delegation is done on the vocabulary edit page.') .'</p>';

      return $output;
  }
}

/**
 * Implementation of hook_menu().
 */
function taxonomy_delegate_menu() {
  global $user;
  $items = array();

  // Admin overview - becomes a tab on the admin >> taxonomy page
  $items['admin/content/taxonomy/delegate'] = array(
    'title' => 'Delegation',
    'page callback' => 'taxonomy_delegate_admin',
    'access arguments' => array('administer taxonomy'),
    'description' => 'Current delegation overview',
    'type' => MENU_LOCAL_TASK,
    );

    // User admin callback.
  $any = count(_taxonomy_delegate_my_vocabularies());
  if ($any) {
    $items['category_admin'] = array(
      'title' => '@name',
      'title arguments' => array('@name' => variable_get('taxonomy_delegate_menu', t('Administer My Categories'))),
      'page callback' => 'taxonomy_delegate_mycategories',
      'access arguments' => array('access content'),
      );
  }

  // Admin settings.
  $items['admin/settings/taxonomy_delegate'] = array(
    'title' => 'Taxonomy Delegate',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('taxonomy_delegate_settings_form'),
    'access arguments' => array('administer taxonomy'),
    'description' => 'Set up Taxonomy_delegate.',
    'file' => 'taxonomy_delegate.admin.inc',
    );

  return $items;
}

/**
 *  Implementation of hook_init.
 *  Make sure the taxonomy admin functions are loaded for the user.
 */
function taxonomy_delegate_init() {
  include_once(drupal_get_path('module', 'taxonomy') .'/taxonomy.admin.inc');
}

/**
 * Implementation of hook_form_alter.
 * Alters the taxonomy vocabulary form to allow delegation.
 */
function taxonomy_delegate_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {
    case 'taxonomy_form_vocabulary':
      $vid = $form['vid']['#value'];
      $roles = _taxonomy_delegate_get_roles(false);
      // Remove anonymous role.
      unset($roles[DRUPAL_ANONYMOUS_RID]);
      $defaults = _taxonomy_delegate_get_delegates($vid);
      $vocab = taxonomy_vocabulary_load($vid);
     
      $form['delete_current'] = array(
        '#type' => 'value',
        '#value' => count($defaults),
        );

      $form['taxonomy_delegate'] = array(
        '#type' => 'fieldset',
        '#title' => t('Delegation'),
        '#description' => t('Use this section to delegate authority to maintain this vocabulary to a specific role.'),
        '#collapsible' => true,
        '#collapsed' => false,
        '#weight' => 0,
        );

      $form['taxonomy_delegate']['roles'] = array(
        '#type' => 'checkboxes',
        '#title' => t('Choose the role(s) that may administer this vocabulary'),
        '#options' => $roles,
        '#multiple' => true,
        '#default_value' => $defaults,
        '#prefix' => '<div class="taxonomy-delegate-checkboxes">',
        '#suffix' => '</div>',
        );

      $form['submit']['#weight'] = 5;
      $form['delete']['#weight'] = 5;
      $form['#submit'][] = 'taxonomy_delegate_vocabulary_submit';
      break;

      case 'taxonomy_form_term':
        // If user has full access, go away now. 
        if (user_access('administer taxonomy')) {
          return;
        }
        $hides = array_filter(variable_get('taxonomy_delegate_hides', array()));
        foreach ($hides as $hide_element) {
          unset($form['advanced'][$hide_element]);
        }
        if (count($hides) == 4) {
          unset($form['advanced']);
        }

  } // End switch form_id.
}

/**
 *  Implementation of hook_form_submit().
 *  Submit handler from taxonomy_form_vocabulary.
 */
function taxonomy_delegate_vocabulary_submit($form, &$form_state) {
  $vid = $form_state['values']['vid'];
  // If there are some already, delete all roles currently associated with this vocabulary.
  if ($form_state['values']['delete_current']) {
    $subs = array($vid);
    db_query('DELETE FROM {taxonomy_delegate} WHERE vid=%d', $subs);
    if ($form_state['values']['op'] == 'Delete') {
      $form_state['redirect'] = 'admin/content/taxonomy/delegate';
      return;
    }
  }
  // Add the new ones into the table.
  // Array_filter will produce an empty array if none chosen.
  $roles = array_filter($form_state['values']['roles']);
  foreach ($roles as $key => $value) {
    $subs = array($form_state['values']['vid'], $key);
    $insert = db_query('INSERT INTO {taxonomy_delegate} (vid, rid) VALUES(%d, %d)', $subs);
    if (!$insert) {
      drupal_set_message("Inserted failed for role: $key", 'warning');
    }
  }
  // Force the menu to update.
  menu_rebuild();
}

/**
 *  User's page.
 */
function taxonomy_delegate_admin($op=null, $vid=null) {
  $destination = drupal_get_destination();
  $output = '';
  $roles = _taxonomy_delegate_get_roles();

  // Is there an op parameter (call back)?  
  if (is_null($op)) {
    // Not a call back, so build the list.
    $vocabularies = taxonomy_get_vocabularies();
    $rows = array();

    foreach ($vocabularies as $vocabulary) {
      $role_list = array();
      foreach (_taxonomy_delegate_get_delegates($vocabulary->vid) as $key => $rid) {
        $role_list[] = $roles[$rid]; 
      }
      if (!empty($role_list)) {
        $role_names = implode('<br/>', $role_list);
      }
      else {
      $role_names = 'None';
      }
      $rows[] = array(
        array('data' => $vocabulary->name, 'header' => true),
        $role_names,
        l(t('edit'), 'admin/content/taxonomy/edit/vocabulary/'. $vocabulary->vid, array('query' => $destination)),
      );
    }
  
    $header = array(t('Vocabulary'), t('Roles'), t('Op'));
    if (!empty($rows)) {
      $output .= theme('table', $header, $rows, array('cellpadding' => '5', 'cellspacing' => '5'));
    }
    else {
      $output .= 'No vocabularies were found.';
    }
    return $output;
  }
  else {
    // This is a call back to manage the list.
    return drupal_get_form('taxonomy_delegate_edit_form', $vid);
  }
}

/**
 *
 */
function taxonomy_delegate_edit_form($vid) {
  $form = array();
  $roles = _taxonomy_delegate_get_roles();
  unset($roles[1]);  // Remove anonymous role.
  $defaults = _taxonomy_delegate_get_delegates($vid);
  $vocab = taxonomy_vocabulary_load($vid);

  $form['vid'] = array(
    '#type' => 'value',
    '#value' => $vid,
    );

  $form['delete_current'] = array(
    '#type' => 'value',
    '#value' => count($defaults),
    );

  $form['vocab'] = array(
    '#type' => 'fieldset',
    '#title' => '<big>'. $vocab->name ." (vid $vid)</big>",
    '#description' => '<h2>'. $vocab->description .'</h2>',
    '#collapsible' => true,
    '#collapsed' => false,
    '#prefix' => '<br/>',
    );

  $form['vocab']['roles'] = array(
    '#type' => 'select',
    '#title' => t('Choose the role(s) that may administer this vocabulary'),
    '#options' => $roles,
    '#multiple' => true,
    '#default_value' => $defaults,
    '#description' => t('You may choose more than one by using the CTRL key.'),
    );

  $form['update']['attach'] = array(
    '#type' => 'submit',
    '#value' => t('Update'),
    '#weight' => 3
    );

  // This is only needed if there is a previous selection.
  if (!empty($defaults)) {
    $form['delete']['attach'] = array(
      '#type' => 'submit',
      '#value' => t('Delete'),
      '#weight' => 4
      );
  }      
  $form['#redirect'] = 'admin/content/taxonomy/delegate';

  return $form;
}

/**
 *  Process submission of the form.
 */
function taxonomy_delegate_edit_form_submit($form, &$form_state) {
  // If there are some already, delete all roles currently associated with this vocabulary.
  if ($form_state['values']['delete_current']) {
    db_query('DELETE FROM {taxonomy_delegate} WHERE vid=%d', $form_state['values']['vid']);
    if ($form_state['values']['op'] == 'Delete') {
      $form_state['redirect'] = 'admin/content/taxonomy/delegate';
      return;
    }
  }
  // Add the new ones into the table.
  if (count($form_state['values']['roles'])) {
    foreach ($form_state['values']['roles'] as $key => $value) {
      $insert = db_query('INSERT INTO {taxonomy_delegate} (vid, rid) VALUES(%d, %d)', $form_state['values']['vid'], $key);
      if (!$insert) {
        drupal_set_message("Inserted failed for role: $key", 'warning');
      }
    }
  }
}

/**
 *
 */
function taxonomy_delegate_mycategories($op=null, $vid=null) {
  global $user;
  $output = '<br/>';

  // Make sure we should be here to help prevent cheaters typing in the path to avoid legitimate security.
  if ($op == 'list') { // Do list stuff.
    $vocabs = _taxonomy_delegate_my_vocabularies();
    if (isset($vocabs[$vid])) {
      return taxonomy_delegate_overview_terms($vid);
    }
    else {
      drupal_access_denied();
      return;
    }
  }

  if ($op == 'add') { // Do add stuff.
    $vocabs = _taxonomy_delegate_my_vocabularies();
    if (isset($vocabs[$vid])) {
      return taxonomy_add_term_page(taxonomy_vocabulary_load($vid));
    }
    else {
      drupal_access_denied();
      return;
    }
  } 

  if ($op == 'edit') {
    // Edit a term (the $vid paramter is actually the tid).
    $tid = $vid;
    $term = taxonomy_get_term($tid);
    $vid = $term->vid;
    $vocabs = _taxonomy_delegate_my_vocabularies();
    if (isset($vocabs[$vid])) {
      return taxonomy_admin_term_edit($tid);
    }
    else {
      drupal_access_denied();
      return;
    }
  } 
  
  $vocabs = _taxonomy_delegate_my_vocabularies();
  
  foreach ($vocabs as $vid => $name) {
    $rows[] = array('<big>'. $name .'</big>',
      '&nbsp;&nbsp;'. l(t('List terms'), 'category_admin/list/'. $vid),
      '&nbsp;&nbsp;'. l(t('Add terms'), 'category_admin/add/'. $vid), 
      );
  }
  $header = array(
    t('Category'),
    array('data' => t('Operations'), 'colspan' => '2'),
    );
  $attributes = array(
    'cellpadding' => '10',
    'cellspacing' => '10',
  );
  $output .= theme('table', $header, $rows, $attributes);
  return $output;
}

/**
 * Display a tree of all the terms in a vocabulary, with options to edit each one.
 */
function taxonomy_delegate_overview_terms($vid) {
  $destination = drupal_get_destination();
  $use_image = module_exists('taxonomy_image');

  $vocabulary = taxonomy_vocabulary_load($vid);
  if (!$vocabulary) {
    return drupal_not_found();
  }

  drupal_set_title(t('Terms for ') . check_plain($vocabulary->name));
  $output = '<br/>';

  if ($vocabulary->tags) {
    $output .= '<p>'. t('This is a freetagging vocabulary.') .'</p>';
    // We are not calling taxonomy_get_tree because that might fail with a lot of tags in a freetagging vocabulary.
    $results = db_query(db_rewrite_sql('SELECT t.*, h.parent FROM {term_data} t INNER JOIN  {term_hierarchy} h ON t.tid = h.tid WHERE t.vid = %d ORDER BY weight, name', 't', 'tid'), $vid);

    while ($term = db_fetch_object($results)) {
      $rows[] = array(
        ($use_image ? taxonomy_image_display($term->tid) : null),
        l($term->name, 'taxonomy/term/'. $term->tid),
        $term->description,
        l(t('edit'), 'category_admin/edit/'. $term->tid, array('query' => $destination)),
      );
    }
  }
  else {
    $tree = taxonomy_get_tree($vocabulary->vid);
    foreach ($tree as $term) {
      if ($use_image) {
        $taxo_image = taxonomy_image_display($term->tid);
      }
      else {
        $taxo_image = null;
      }
      $rows[] = array(
        $taxo_image,
        str_repeat('--', $term->depth) .' '. l($term->name, "taxonomy/term/$term->tid"),
        $term->description,
        l(t('edit'), 'category_admin/edit/'. $term->tid, array('query' => $destination)),
        );
    }
  }
  
  if (!$rows) {
    $rows[] = array(array('data' => t('No terms available.'), 'colspan' => '5'));
  }
  $header = array(
    ($use_image ? t('Image') : null),
    t('Name'), t('Description'), t('Operations'),
    );

  $output .= theme('table', $header, $rows, array('id' => 'taxonomy'));

  return $output;
}

/**
 *  Get a list of the vocabularies for the current user.
 */
function _taxonomy_delegate_my_vocabularies() {
  global $user;
  $list = array();
  foreach ($user->roles as $rid => $name) {
    $list[] = $rid;
  }
  $result = db_query('SELECT DISTINCT(vid) FROM {taxonomy_delegate} WHERE rid IN ('. implode(', ', $list) .')');
  $vocabs = array();
  
  while ($vocab = db_fetch_array($result)) {
    $vid = $vocab['vid'];
    $voc = taxonomy_vocabulary_load($vid);
    $vocabs[$vid] = $voc->name;
  }

  return $vocabs;
}

/**
 *  Get a keyed array of the roles and their names.
 */
function _taxonomy_delegate_get_roles($add_none = false) {
  $result = db_query('SELECT rid, name FROM {role}');
  $roles = array();
  if ($add_none) {
    $roles[0] = '<none>';
  }

  while ($row = db_fetch_array($result)) {
    $roles[$row['rid']] = $row['name'];
  }
  
  if (empty($roles)) {
    drupal_set_message('No roles found.', 'warning');
  }
  
  return $roles;
}

/**
 *  Get an array of the currently allowed delegate roles.
 */
function _taxonomy_delegate_get_delegates($vid) {
  $result = db_query('SELECT * FROM {taxonomy_delegate} WHERE vid=%d', $vid);
  $roles = array();

  while ($row = db_fetch_array($result)) {
    $roles[] = $row['rid'];
  }
  
  return $roles;
}
